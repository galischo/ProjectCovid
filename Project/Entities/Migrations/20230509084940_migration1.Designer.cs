// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(Hmo))]
    [Migration("20230509084940_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Patient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("coronaid")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numStreet")
                        .HasColumnType("int");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<int>("phoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("coronaid");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Entities.models.Corona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("datePositiveResult")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateRecovery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("vaccinationDate1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("vaccinationDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("vaccinationDate3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("vaccinationDate4")
                        .HasColumnType("datetime2");

                    b.Property<string>("vaccineManufacturer1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaccineManufacturer2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaccineManufacturer3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaccineManufacturer4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Coronas");
                });

            modelBuilder.Entity("Entities.Patient", b =>
                {
                    b.HasOne("Entities.models.Corona", "corona")
                        .WithMany()
                        .HasForeignKey("coronaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("corona");
                });
#pragma warning restore 612, 618
        }
    }
}
